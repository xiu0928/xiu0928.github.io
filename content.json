{"meta":{"title":"我的快乐","subtitle":"欢迎光临 我的快乐","description":null,"author":"李秀远","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2018-09-30T09:25:30.000Z","updated":"2019-10-15T06:56:52.162Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-14T05:10:38.000Z","updated":"2019-10-15T06:55:43.792Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","updated":"2019-10-15T06:57:48.160Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","updated":"2019-10-15T06:57:25.457Z","comments":true,"path":"contact/index.html","permalink":"http://yoursite.com/contact/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-10-14T05:11:36.000Z","updated":"2019-10-15T06:56:10.881Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"typora-vue-theme Theme introduction","slug":"theme","date":"2018-09-07T01:25:00.000Z","updated":"2019-10-15T10:20:48.819Z","comments":true,"path":"2018/09/07/theme/","link":"","permalink":"http://yoursite.com/2018/09/07/theme/","excerpt":"","text":"特性简单漂亮，文章内容美观易读Material Design 设计响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现首页轮播文章及每天动态切换 Banner 图片瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替）时间轴式的归档页词云的标签页和雷达图的分类页丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）可自定义的数据的友情链接页面支持文章置顶和文章打赏支持 MathJax TOC 目录可设置复制文章内容时追加版权信息可设置阅读文章时做密码验证Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk）集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能支持在首页的音乐播放和视频播放功能下载当你看到这里的时候，应该已经有一个自己的 Hexo 博客了。如果还没有的话，不妨使用 Hexo 和 Markdown 来写博客和文章。 点击 这里 下载 master 分支的最新稳定版的代码，解压缩后，将 hexo-theme-matery 的文件夹复制到你 Hexo 的 themes 文件夹中即可。 当然你也可以在你的 themes 文件夹下使用 Git clone 命令来下载: git clone https://github.com/blinkfox/hexo-theme-matery.git配置切换主题修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery_config.yml 文件的其它修改建议:请修改 _config.yml 的 url 的值为你的网站主 URL（如：http://xxx.github.io）。建议修改两个 per_page 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。如果你是中文用户，则建议修改 language 的值为 zh-CN。新建分类 categories 页categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下： hexo new page “categories”编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容： — title: categories date: 2018-09-30 17:25:30 type: “categories” layout: “categories” —##新建标签 tags 页tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下： hexo new page “tags”编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容： — title: tags date: 2018-09-30 18:23:38 type: “tags” layout: “tags” —新建关于我 about 页about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下： hexo new page “about”编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容： — title: about date: 2018-09-30 17:25:30 type: “about” layout: “about” —###新建友情连接 friends 页（可选的）friends 页是用来展示友情连接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下： hexo new page “friends”编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容： — title: friends date: 2018-12-12 21:25:30 type: “friends” layout: “friends” —同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示： [{ “avatar”: “http://image.luokangyuan.com/1_qq_27922023.jpg&quot;, “name”: “码酱”, “introduction”: “我不是大佬，只是在追寻大佬的脚步”, “url”: “http://luokangyuan.com/&quot;, “title”: “前去学习” }, { “avatar”: “http://image.luokangyuan.com/4027734.jpeg&quot;, “name”: “闪烁之狐”, “introduction”: “编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬”, “url”: “https://blinkfox.github.io/&quot;, “title”: “前去学习” }, { “avatar”: “http://image.luokangyuan.com/avatar.jpg&quot;, “name”: “ja_rome”, “introduction”: “平凡的脚步也可以走出伟大的行程”, “url”: “ttps://me.csdn.net/jlh912008548”, “title”: “前去学习” }]代码高亮由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：npm i -S hexo-prism-plugin然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下： highlight: enable: false prism_plugin: mode: ‘preprocess’ # realtime/preprocess theme: ‘tomorrow’ line_number: false # default false custom_css:搜索 line_number: true auto_detect: false tab_replace:","categories":[],"tags":[{"name":"Typora","slug":"Typora","permalink":"http://yoursite.com/tags/Typora/"},{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}],"author":"Li"},{"title":"ArrayList","slug":"ArrayList","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-14T09:54:26.629Z","comments":true,"path":"2018/03/02/ArrayList/","link":"","permalink":"http://yoursite.com/2018/03/02/ArrayList/","excerpt":"","text":"1.底层是利用（动态）数组形式实现 1.5 2.如何构建一个ArrayList对象 无参构造方法 带默认容量的构造方法3.常用方法 增 add（E e） 删 remove（index） 改 set（index value） 查 get（index） 长度 size（）泛型： 用来规定数据类型 注意：泛型 造型 在类或接口描述的时候 可以使用某种符号来表示一个未知的类型 在类型使用的时候 需要一个具体类型来代替 注意：泛型需要使用应用数据类型来代替 1.泛型类 2.泛型接口 3.泛型方法 4.方法参数泛型限制=================================================================Vector类 1.是ArrayList集合早期版本 线程同步 安全性高 效率底2.扩容方式不同 2倍 可通过构造方法创建对象时修改这一机制","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"},{"name":"ArrayList","slug":"技术/ArrayList","permalink":"http://yoursite.com/categories/技术/ArrayList/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"Set","slug":"Set","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-14T10:17:23.613Z","comments":true,"path":"2018/03/02/Set/","link":"","permalink":"http://yoursite.com/2018/03/02/Set/","excerpt":"","text":"Collection 以value形式存在 Set 无序无重复 1.具体实现类 HashSet TreeSet 2.基本的使用 3.无序 无重复 无序：我们使用集合存放的顺序 集合内取出来的顺序不一致 集合本身是有自己的算法排布顺序 hash算法 HashSet---&gt;（HashMap 数组+链表 散链表） 1.java.utill 2.如何创建对象 无参数 有参数 HashSet&lt;String&gt; set =new HashSet&lt;String&gt;(); 3.集合容器的基本使用 增 add(value) addAall(collection c) retainAll removeAll 并集 交集 差集 删 boolean = remove(Objest) 改 没有 查 增强for循环集合遍历 for(String v:set){ System.out.println(v); } 迭代器： Iterator&lt;String&gt; it = set.iterator(); //判断下一个位置是否有元素 while(it.hasNext()){ String value = it.next(); System.out.println(value); }","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"},{"name":"Set","slug":"技术/Set","permalink":"http://yoursite.com/categories/技术/Set/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"Git 上传","slug":"Git 上传","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-15T09:59:41.211Z","comments":true,"path":"2018/03/02/Git 上传/","link":"","permalink":"http://yoursite.com/2018/03/02/Git 上传/","excerpt":"","text":"安装hexo基础框架 npm install hexo-cli -g更改author字段后的内容就可以了。我的是用windows系统，打开cmd然后进入到你的博客文件目录，输入以下命令 hexo clean hexo g hexo d网易云音乐外链 https://music.163.com/song/media/outer/url?id=484365611.mp3清空git缓存 git rm -r --cached . git gc更换仓库： git remote -v git remote set-url origin 新仓库 git remote set-url origin https://github.com/xiu0928/love.git git config user.name git config user.email修改 git config --global user.name &quot;xiu0928&quot; git config --global user.email &quot;2011447576@qq.com&quot;上传项目 git init git add . git commit -m &quot;first commit&quot; git remote add origin https://自己的仓库url地址（上面有说到） 将本地的仓库关联到github上， git push -u origin master更新到GitHub上 hexo clean hexo generate hexo deploy 更新到GitHub上 git clone https://github.com/xiu0928/xiu0928.github.io .deploy/xiu0928.github.io hexo generate //生成静态文件 cp -R public/* .deploy/xiu0928.github.io //复制文件 cd .deploy/xiu0928.github.io //切换目录 git add . //将需要提交的代码添加到暂存区 git commit -m &quot;update&quot; //将暂存区内容提交给本地版本库 git push //推送给远程服务器","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"},{"name":"Git","slug":"技术/Git","permalink":"http://yoursite.com/categories/技术/Git/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"Map","slug":"Map","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-15T10:21:18.219Z","comments":true,"path":"2018/03/02/Map/","link":"","permalink":"http://yoursite.com/2018/03/02/Map/","excerpt":"","text":"映射 通过某一个key可以直接定位到value值 存储的方式：键值对 存储 key-value key无序无重复 value无序可重复 map基本使用： HashMap HashSet Hashtable HashMap: 1.包 java.util 2.如何创建对象 HashMap&lt;Integer,String&gt; hashmap = new HashMap&lt;Integer,String&gt;(); 3.基本方法 增 put（key,value）存储一组映射关系 key-value 删 E = remove（key）; 改 replace(key,new value); put(key,value); 查 get(key); 遍历 //获取map集合的全部key Set&lt;Integer&gt; keys = map.keySet(); //通过迭代器去遍历keys Iterator&lt;Integer&gt; it = keys.iterator(); while(it.hasNext()){ Integer key = it.next(); String value = map.get(key); System.out.println(key+&quot;-&quot;+value); } size(); 4.除了上面的几个常用的方法可以去api去看 5.map集合什么情况下用： 1.想要存储一组元素 数组 or 集合 如果存储的元素以后长度不变用数组，不确定用集合 2.如果发现长度以后不确定 --&gt;集合 List Set Map 有序 无重复 k-v ArrayList 适合遍历 Hash 性能高 Hash 性能高 LinkedList 适合插入删除 Tree 希望自动去重和排序 Tree 希望key自动排序 Stack LIFO","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"},{"name":"Map","slug":"技术/Map","permalink":"http://yoursite.com/categories/技术/Map/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"diaspora主题使用","slug":"diaspora主题使用","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-14T06:15:42.987Z","comments":true,"path":"2018/03/02/diaspora主题使用/","link":"","permalink":"http://yoursite.com/2018/03/02/diaspora主题使用/","excerpt":"","text":"安装主题$ git clone https://github.com/Fechin/hexo-theme-diaspora.git diaspora启用主题修改Hexo配置文件 _config.yml 主题项设置为diaspora…theme: diaspora…更新主题注意：请在更时主题时备份_config.yml配置文件cd themes/diasporagit pull新建文章模板 title: My awesome titledate: 2016-10-12 18:38:45categories: - 分类1 - 分类2tags: - 标签1 - 标签2mp3: http://domain.com/awesome.mp3cover: http://domain.com/awesome.jpg 创建分类页1 新建一个页面，命名为 categories 。命令如下：hexo new page categories2 编辑刚新建的页面，将页面的类型设置为 categoriestitle: categoriesdate: 2014-12-22 12:39:04type: “categories” 主题将自动为这个页面显示所有分类。创建标签页1 新建一个页面，命名为 tags 。命令如下：hexo new page tags2 编辑刚新建的页面，将页面的类型设置为 tagstitle: tagsdate: 2014-12-22 12:39:04type: “tags” 主题将自动为这个页面显示所有标签。主题配置头部菜单，title: linkmenu: Whoami: /whoami Github: https://github.com/Fechin Twitter: https://twitter.com/FechinLi 分类: /categories 归档: /archives 标签云: /tags 是否显示目录TOC: false 是否自动播放音乐autoplay: false 默认音乐（随机播放）mp3: - http://link.hhtjim.com/163/425570952.mp3 - http://link.hhtjim.com/163/425570952.mp3 首页封面图, 为空时取文章的cover作为封面welcome_cover: # /img/welcome-cover.jpg 默认文章封面图cover: /img/cover.jpg Gitalk 评论插件（https://github.com/gitalk/gitalk）gitalk: # 是否自动展开评论框 autoExpand: false # 应用编号 clientID: ‘’ # 应用秘钥 clientSecret: ‘’ # issue仓库名 repo: ‘’ # Github名 owner: ‘’ # Github名 admin: [‘’] # Ensure uniqueness and length less than 50 id: location.pathname # Facebook-like distraction free mode distractionFreeMode: false 网站关键字keywords: Fechin 要使用google_analytics进行统计的话，这里需要配置IDgoogle_analytics: 网站icofavicon: /img/favicon.png rss文件rss: atom.xml","categories":[{"name":"主题","slug":"主题","permalink":"http://yoursite.com/categories/主题/"},{"name":"diaspora","slug":"主题/diaspora","permalink":"http://yoursite.com/categories/主题/diaspora/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"Java总结","slug":"总结","date":"2018-03-02T04:23:25.000Z","updated":"2019-10-14T05:14:55.874Z","comments":true,"path":"2018/03/02/总结/","link":"","permalink":"http://yoursite.com/2018/03/02/总结/","excerpt":"javaSE（标准版） javaEE（企业版） javaME（微型版）","text":"javaSE（标准版） javaEE（企业版） javaME（微型版） JDK（java开发工具包）JRE（java运行环境）IDE（集成开发环境） Java SE（Java Platform，Standard Edition）。Java SE 以前称为 J2SE。它允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。Java SE 包含了支持 Java Web 服务开发的类，并为 Java Platform，Enterprise Edition（Java EE）提供基础。 J2SE就是做那种桌面安装程序样的，像QQ，WORD那种应用程序。 Java EE（Java Platform，Enterprise Edition）。这个版本以前称为 J2EE。企业版本帮助开发和部署可移植、健壮、可伸缩且安全的服务器端 Java 应用程序。Java EE 是在 Java SE 的基础上构建的，它提供 Web 服务、组件模型、管理和通信 API，可以用来实现企业级的面向服务体系结构（service-oriented architecture，SOA）和 Web 2.0 应用程序。 J2EE 就是做基于Internet的应用程序，像选课系统，企业网站，银行系统之类的。 Java ME（Java Platform，Micro Edition）。这个版本以前称为 J2ME。Java ME 为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境。Java ME 包括灵活的用户界面、健壮的安全模型、许多内置的网络协议以及对可以动态下载的连网和离线应用程序的丰富支持。基于 Java ME 规范的应用程序只需编写一次，就可以用于许多设备，而且可以利用每个设备的本机功能。 J2ME就是做嵌入式系统开发的，像手机游戏之类的，像现在流行的Android操作系统。 JDK（Java Development Kit）。 JRE（Java Runtime Environment） IDE（Ind Depvelopment Environment） 一、面向对象 类、对象、变量（1）所有的Java程序都已类class为组织单元；类由属性和方法两部分组成（2）先创建对象，再使用对象（3）成员变量：类中定义，自动定义初始值局部变量：类方法中定义（两变量同名，局部变量有更高的优先级） 构造方法构造方法是定义在java类中的一个用来初始化对象的方法，与类同名且没有返回值。 public 构造方法名（）{ }其中构造方法名与类同名；当没有指定的构造方法时，系统会自动添加无参构造方法 Static使用Static修饰的成员属于整个类，被类的所有对象共享。可通过使用类名直接访问静态成员，也可通过对象名Static可以修饰变量、方法和代码块 （1）Static使用之静态方法public class Helloworld { public static void print() { System.out.println(“***”); } public static void main(String[] args) { Helloworld.print(); Helloworld demo = new Helloworld; demo.print(); }}注意：静态方法中可以直接调用同类的静态成员，但不可以直接调用非静态成员；普通成员方法中可以直接访问同类的非静态变量和静态变量；静态方法中不能直接调用非静态成员方法 （2）Static使用之静态初始化块静态初始化块在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通成员 public class Helloworld { int num1; int num2; static int num3; public Helloworld() { num1 = 91; System.out.println(&quot;构造方法为num1赋值&quot;); num2 = 74; System.out.println(&quot;初始化块为num2赋值&quot;); num3 = 83; System.out.println(&quot;静态初始化块为num3赋值&quot;); } public static void main(String[] args) { Helloworld hello = new Helloworld(); System.out.println(hello.num1); System.out.println(hello.num2); System.out.println(num3); Helloworld hello2 = new Helloworld(); }}运行结果：静态初始化块为num3赋值初始化块为num2赋值构造方法为num1赋值917483初始化块为num2赋值构造方法为num1赋值 二、java面向对象的特性 封装性：将类的某些信息隐藏在内部，通过类的方法来实现操作访问步骤： 1 修改属性可见性； 2 创建getter\\setter方法； 3在方法中加入属性控制语句 (1)静态内部类:public class SOuter { private int a = 99; static int b = 1; public static class SInner { int b = 2; public void test() { System.out.println(&quot;访问外部类b&quot; + SOuter.b); System.out.println(&quot;访问内部类b&quot; + b); } } public static void main(String[] args) { //三行表示 SInner sInner; sInner = new SInner(); sInner.test(); //两行表示 SInner si = new SInner(); si.test(); //一行表示 new SInner().test(); }}(2)成员内部类：访问外部类时使用this指针（3）方法内部类：只能在该方法中使用，且不能使用访问控制符和Static修饰符2. 继承性（1）一般形式：class 子类 extends 父类（2）方法重写：子类对继承的父类方法不满意可以重写，调用时优先调用子类方法（3）继承的初始化顺序：先初始化父类，再到子类；先执行初始化对象中属性，再执行狗在方法中的初始化（4）父类对象–属性初始化–构造方法–子类对象–属性初始化–构造方法（5）注意：如果子类构造方法中没有显示调用父类的构造方法，默认调用父类无参构造方法，若此父类没用无参的构造方法，则编译出错 多态性引用多态：父类的引用可以指向本类的对象，也可指向子类的对象方法多态：创建本类对象时，调用的方法为本类方法；创建子类对象时，调用的方法为子类的重写的方法或者继承的方法 （1）抽象类用关键字abstract修饰：抽象类只用声明不需要实现；包含抽象方法的类为抽象类；抽象类不能直接创建，可以定义引用变量。 public abstract class Telphone{public abstract void call(); //抽象方法没有方法体，以分号结束}（2）接口（一种特殊的类，有全局变量和公共抽象方法组成）[修饰符] class 类名 extends 父类implemrnts 接口1,2……{类体部分}注：接口经常与匿名内部类配合使用 public interface Iplay{ public void phone();}public class People implements Iplay{ public static void main(String[] args){ People test=new People(); test.phone(); } public void phone(){ System.out.println(“手机可以玩游戏”); }}1.String、StringBuilder、StringBuffer的区别是什么，String为什么是不可变的？不可变性String类的底层源码中，通过final关键字修饰字符串数组，private final char value[]，所以是不可变的。StringBuffer和StringBuilder类是集成自 AbstractStringBuilder 类， AbstractStringBuilder 类中的变量没有用final关键字修饰，所以是可变的。 线程安全性String是不可变的，是常量，所以是线程安全的。StringBuilder和StringBuffer都继承自AbstractStringBuilder 类，StringBuffer对方法加了同步锁，所以是线程安全的，而StringBuilder没有加同步锁，所以是线程不安全的。 性能对String类型进行改变是都会new一个新的string对象，并指向新的对象； StringBuffer直接通过改变自身变量的值，StringBuilder相对能提升性能，但有线程不安全的情况。 2.== 与 equals==用来判断两个对象是否相等，基础数据类型比较的是值是否相等。 没有重写对象的equals方法时，也是用来比较两个对象是否相等，重写equals方法可以比较内容相等，返回true 3.try/catch/finally中finally是否一定执行在以下4种特殊情况下，finally块不会被执行: 在finally语句块中发生了异常。 在前面的代码中用了System.exit()退出程序。 程序所在的线程死亡。 关闭CPU。 4.接口和抽象类的区别？1.抽象类中可以实现方法，抽象接口不能实现方法（jdk1.8以后可以实现方法）； 2.接口中的变量默认是final类型，而抽象类不是； 3.类只能继承一个抽象类，而接口可以实现多个； 4.类继承接口需要实现所有方法，抽象类不需要； 5.接口不能用new实例化，可以声明。必须引用一个实现该接口的对象抽象是对类的抽象，是一种模板设计，接口是行为的抽象，是一种行为的规范。 5.Arraylist 与 LinkedList 异同安全性ArrayList与LinkedList都是线程不安全的。 数据结构实现ArryayList是基于Object数组，而LinkedList是基于双向循环链表（JDK1.6之前为循环链表，之后取消了循环） 插入删除的影响ArrayList采用数组存储，插入删除受元素位置的影响； LinkedList采用链表存储，插入删除不收元素位置影响； 访问元素LinkedList 不支持高效的随机元素访问，而 ArrayList 支持。快速随机访问就是通过元素的序号快速获取元素对象(对应于get(int index)方法)。 实现了RandomAccess接口的list，优先选择普通for循环 ，其次foreach,未实现RandomAccess接口的list， 优先选择iterator遍历(foreach遍历底层也是通过iterator实现的)，大size的数据，千万不要使用普通for循环 6.ArrayList 与 Vector 区别Vector中所有方法都是同步的，在多线程操作中，同步操作会耗费时间，而ArrayList是不需要同步的，在不需要考虑线程安全时可以使用。 7.HashMap的底层实现待补充完善 8.HashSet 和 HashMap 区别HashMap实现Map接口，用来存储键值对，调用put方法添加元素，使用Key计算Hashcode，而HashSet实现Set接口，用来存储对象，调用add方法添加对象，使用对象计算hashcode，根据equals方法判断对象相等，执行效率的话，HashMap优与HashSet。 9.ConcurrentHashMap 和 Hashtable 的区别ConcurrentHashMap 和 HashTable 的区别主要体现在实现线程安全的方式上不同。ConcurrentHashMap使用的是分段锁，HashTable使用的是同一把锁，因而在多线程并发中效率很低。 10.多线程实现方式1.继承Thread类，2.实现Runnable接口，3.基于线程池实现","categories":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/categories/Java/"},{"name":"知识","slug":"Java/知识","permalink":"http://yoursite.com/categories/Java/知识/"}],"tags":[{"name":"知识点","slug":"知识点","permalink":"http://yoursite.com/tags/知识点/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]}]}